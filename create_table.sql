CREATE SCHEMA PROJECT; 

CREATE TABLE Person (
ID CHAR(4) NOT NULL CHECK (ID >= 'P000' AND ID <= 'P999'),
Address VARCHAR(30) NOT NULL,
Fname VARCHAR(10) NOT NULL,
Mname VARCHAR(10),
Lname VARCHAR(10) NOT NULL,
DOB DATE NOT NULL CHECK (DOB <= '2004-11-30'),
Gender CHAR(1) NOT NULL CHECK (Gender = 'F' OR Gender = 'M'),
PRIMARY KEY (ID)
);

 CREATE TABLE Person_PhoneNo 
( PhoneNo VARCHAR(20) NOT NULL, 
PersonID CHAR(4) NOT NULL CHECK (PersonID >= 'P000' AND PersonID <= 'P999'), 
UNIQUE(PhoneNo),
PRIMARY KEY (PersonID, PhoneNo), 
FOREIGN KEY (PersonID) REFERENCES Person(ID) 
);

CREATE TABLE Member 
( MemNo INT NOT NULL, 
PRIMARY KEY (MemNo) 
);

CREATE TABLE Customer 
( ID CHAR(4) NOT NULL CHECK (ID >= 'P000' AND ID <= 'P999'), 
MemNo INT, 
PRIMARY KEY (ID),
UNIQUE (MemNo), 
FOREIGN KEY (ID) REFERENCES Person(ID),
FOREIGN KEY (MemNo) REFERENCES Member(MemNo) 
);

CREATE TABLE Employee 
( ID CHAR(4) NOT NULL CHECK (ID >= 'P000' AND ID <= 'P999'), 
MemNo INT, 
StartDate DATE NOT NULL,
PRIMARY KEY (ID),
UNIQUE (MemNo), 
FOREIGN KEY (ID) REFERENCES Person(ID),
FOREIGN KEY (MemNo) REFERENCES Member(MemNo) 
);

CREATE TABLE Manager 
( ID CHAR(4) NOT NULL CHECK (ID >= 'P000' AND ID <= 'P999'), 
PRIMARY KEY (ID),
FOREIGN KEY (ID) REFERENCES Employee(ID) 
);

CREATE TABLE FloorStaff
( ID CHAR(4) NOT NULL CHECK (ID >= 'P000' AND ID <= 'P999'), 
MgrID CHAR(4) NOT NULL CHECK (MgrID >= 'P000' AND MgrID <= 'P999'),
PRIMARY KEY (ID),
FOREIGN KEY (ID) REFERENCES Employee(ID),
FOREIGN KEY (MgrID) REFERENCES Manager(ID) 
);

CREATE TABLE Cashier 
( ID CHAR(4) NOT NULL CHECK (ID >= 'P000' AND ID <= 'P999'), 
StaffID CHAR(4) NOT NULL CHECK (StaffID >= 'P000' AND StaffID <= 'P999'),
PRIMARY KEY (ID),
FOREIGN KEY (ID) REFERENCES Employee(ID),
FOREIGN KEY (StaffID) REFERENCES FloorStaff(ID) 
);

CREATE TABLE Card
( StartDate Date NOT NULL, 
MemNo INT NOT NULL,
MgrID CHAR(4) NOT NULL CHECK (MgrID >= 'P000' AND MgrID <= 'P999'),
discountID INT NOT NULL,
Description VARCHAR(500)  NOT NULL,
PRIMARY KEY (StartDate, MemNo),
FOREIGN KEY (MgrID) REFERENCES Manager(ID),
FOREIGN KEY (MemNo) REFERENCES Member(MemNo) 
);

CREATE TABLE Guest
( ID CHAR(4) NOT NULL CHECK (ID >= 'G000' AND ID <= 'G999'), 
MemNo INT NOT NULL,
Address VARCHAR(20),
Gname VARCHAR(10),
PhoneNo VARCHAR(20),
PRIMARY KEY (ID),
FOREIGN KEY (MemNo) REFERENCES Member(MemNo) 
);

CREATE TABLE ScheduleTable
( ID INT NOT NULL,
PRIMARY KEY (ID)
);

CREATE TABLE Adjust
( MgrID CHAR(4) NOT NULL CHECK (MgrID >= 'P000' AND MgrID <= 'P999'),
TableID INT NOT NULL,
PRIMARY KEY (MgrID, TableID),
FOREIGN KEY (MgrID) REFERENCES Manager(ID),
FOREIGN KEY (TableID) REFERENCES ScheduleTable(ID)
);

CREATE TABLE Stores_E1
( Name VARCHAR(10) NOT NULL,
FloorNo INT NOT NULL,
Type VARCHAR(10) NOT NULL,
ScheduleID INT NOT NULL,
PRIMARY KEY (Name, FloorNo),
FOREIGN KEY (ScheduleID) REFERENCES ScheduleTable(ID)
);

CREATE TABLE Stores_E2
( StaffID CHAR(4) NOT NULL CHECK (StaffID >= 'P000' AND StaffID <= 'P999'),
FloorNo INT NOT NULL,
Day DATE NOT NULL,
PRIMARY KEY (FloorNo, Day),
FOREIGN KEY (StaffID) REFERENCES FloorStaff(ID)
);

CREATE TABLE Product
( ID INT NOT NULL,
Description VARCHAR(500) NOT NULL,
Name VARCHAR(10) NOT NULL,
PRIMARY KEY (ID)
);


CREATE TABLE Sold
( ProductID INT NOT NULL,
StoreName VARCHAR(20) NOT NULL,
StoreFloor INT NOT NULL,
PRIMARY KEY (ProductID, StoreName, StoreFloor),
FOREIGN KEY (ProductID) REFERENCES Product(ID),
FOREIGN KEY (StoreName, StoreFloor) REFERENCES Stores_E1(Name, FloorNo)
);

CREATE TABLE StoreOrder
( ID INT NOT NULL,
Time TIMESTAMP NOT NULL,
MemNo INT NOT NULL,
StoreName VARCHAR(20) NOT NULL,
StoreFloor INT NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY (MemNo) REFERENCES Member(MemNo),
FOREIGN KEY (StoreName, StoreFloor) REFERENCES Stores_E1(Name, FloorNo)
);

CREATE TABLE Payment_E1
( ID INT NOT NULL,
Method VARCHAR(10) NOT NULL,
Time TIMESTAMP NOT NULL,
Amount INT NOT NULL,
OrderID INT NOT NULL,
MemNo INT NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY (MemNo) REFERENCES Member(MemNo),
FOREIGN KEY (OrderID) REFERENCES StoreOrder(ID)
);

CREATE TABLE Payment_E2
( StoreName VARCHAR(20) NOT NULL,
StoreFloor INT NOT NULL,
CashierID CHAR(4) NOT NULL CHECK (CashierID >= 'P000' AND CashierID <= 'P999'),
OrderID INT NOT NULL,
PRIMARY KEY (OrderID),
FOREIGN KEY (OrderID) REFERENCES StoreOrder(ID),
FOREIGN KEY (StoreName, StoreFloor) REFERENCES Stores_E1(Name, FloorNo),
FOREIGN KEY (CashierID) REFERENCES Cashier(ID)
);

CREATE TABLE Payment_E3
( Points INT NOT NULL,
OrderID INT NOT NULL,
MemNo INT NOT NULL,
PRIMARY KEY (OrderID, MemNo),
FOREIGN KEY (MemNo) REFERENCES Member(MemNo),
FOREIGN KEY (OrderID) REFERENCES StoreOrder(ID)
);

CREATE TABLE Record
( ID INT NOT NULL,
Quantity INT NOT NULL CHECK (Quantity > 0 AND Quantity < 10000),
StoreName VARCHAR(20) NOT NULL,
StoreFloor INT NOT NULL,
ProductID INT NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY (StoreName, StoreFloor) REFERENCES Stores_E1(Name, FloorNo),
FOREIGN KEY (productID) REFERENCES Product(ID) );

CREATE TABLE recordOP_E1
( OrderID INT NOT NULL,
Balance FLOAT NOT NULL, 
PRIMARY KEY (OrderID),
FOREIGN KEY (OrderID) REFERENCES StoreOrder(ID)
);

CREATE TABLE recordOP_E2
( OrderID INT NOT NULL, 
ProductID INT NOT NULL,
Price FLOAT NOT NULL, 
PRIMARY KEY (ProductID, OrderID),
FOREIGN KEY (ProductID) REFERENCES Product(ID),
FOREIGN KEY (OrderID) REFERENCES StoreOrder(ID)
);
